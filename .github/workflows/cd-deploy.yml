name: CD - Deploy to Jupiter Server

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production (jupiter.ar)
    runs-on: ubuntu-latest

    steps:
      - name: Start Deployment
        run: echo "Workflow de despliegue iniciado manualmente..."

      # Paso 1: Checkout del c칩digo (para acceder a los archivos compose y nginx)
      - name: Checkout Code
        uses: actions/checkout@v4

      # Paso 2: Configurar Agente SSH
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Paso 3: Crear Directorios de Configuraci칩n en Servidor (incluyendo nginx-conf)
      - name: Create Config Directories on Server
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "mkdir -p /home/deploy/jupiter_config/nginx-conf"

      # Paso 4: Copiar Archivo Docker Compose de Apps
      - name: Copy App Docker Compose File to Server
        run: |
          scp -o StrictHostKeyChecking=no \
            ./apps/jupiter/docker-compose.prod.yml \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/deploy/jupiter_config/docker-compose.prod.yml

      # Paso 5: Copiar Archivo Docker Compose de VPS (Nginx)
      - name: Copy VPS Docker Compose File to Server
        run: |
          scp -o StrictHostKeyChecking=no \
            ./apps/jupiter/vps-infrastructure/hybrid/docker-compose.vps.yml \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/deploy/jupiter_config/docker-compose.vps.yml

      # Paso 6: Copiar Archivo de Configuraci칩n de Nginx
      - name: Copy Nginx Config File to Server
        run: |
          scp -o StrictHostKeyChecking=no \
            ./apps/jupiter/vps-infrastructure/hybrid/nginx-conf/webapp.conf \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/deploy/jupiter_config/nginx-conf/webapp.conf

      # Paso 7: Ejecutar el script de despliegue en el servidor remoto
      # (El script ahora levantar치 ambos archivos compose)
      - name: Execute Deployment Script on Server
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "/home/deploy/deploy.sh latest ${{ secrets.GHCR_TOKEN }}"
