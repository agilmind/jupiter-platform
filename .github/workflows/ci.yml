name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  main:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Configuración de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      # Instalación de dependencias con caché y --legacy-peer-deps
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci --legacy-peer-deps

      # Verificación del formato de código
      - name: Check format
        id: format
        run: npx nx format:check
        continue-on-error: true

      # Análisis estático
      - name: Lint
        id: lint
        run: npx nx affected --target=lint
        continue-on-error: true

      # Tests
      - name: Test
        id: test
        run: npx nx affected --target=test --passWithNoTests
        continue-on-error: true

      # Build
      - name: Build
        id: build
        run: npx nx affected --target=build
        continue-on-error: true

      # Resumen final
      - name: CI Summary
        if: always()
        run: |
          echo "### Resumen de CI 📊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Verificación | Estado |" >> $GITHUB_STEP_SUMMARY
          echo "| ------------ | ------ |" >> $GITHUB_STEP_SUMMARY
          echo "| Formato | ${{ steps.format.outcome == 'success' && '✅ Pasó' || '⚠️ No cumple con estándares' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ steps.lint.outcome == 'success' && '✅ Pasó' || '❌ Falló' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ steps.test.outcome == 'success' && '✅ Pasó' || '❌ Falló' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ steps.build.outcome == 'success' && '✅ Pasó' || '❌ Falló' }} |" >> $GITHUB_STEP_SUMMARY

      # Solo falla el CI si realmente queremos que falle (en este caso hemos puesto continue-on-error)
      - name: Check Status
        if: false # Temporalmente deshabilitar fallas en CI
        run: exit 1
