# Configuración básica de Promtail para leer logs de Docker

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  # Fichero para guardar la posición de lectura de los logs
  filename: /etc/promtail/positions/positions.yaml # Usar la ruta del volumen montado

clients:
  - url: http://loki:3100/loki/api/v1/push # URL del servicio Loki en Docker Compose

scrape_configs:
  # --- Scrape config usando el Docker Service Discovery ---
  # Descubre contenedores automáticamente y extrae logs y labels
  - job_name: containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock # Usar socket montado
        refresh_interval: 5s
        # Opcional: Filtrar qué contenedores incluir/excluir
        # filters:
        #   - name: label
        #     values: ["logging=promtail"] # Solo contenedores con esta label
    relabel_configs:
      # Extraer labels útiles de los contenedores Docker
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' # Quitar el '/' inicial
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      # Añadir label con el nombre del proyecto VPS para agrupar
      - source_labels: [] # No necesita source
        target_label: 'vps_project'
        replacement: 'hostinger' # Variable del generador


  # --- Alternativa: Scrape config leyendo archivos json de Docker ---
  # Menos dinámico, requiere montar /var/lib/docker/containers
  # - job_name: docker-json-logs
  #   static_configs:
  #     - targets:
  #         - localhost
  #       labels:
  #         job: containerlogs
  #         # Ruta DENTRO del contenedor Promtail donde montaste los logs del host
  #         __path__: /var/lib/docker/containers/*/*-json.log
  #         vps_project: 'hostinger'
  #   pipeline_stages:
  #     - json:
  #         expressions:
  #           output: log
  #           stream: stream
  #           timestamp: time
  #     - timestamp:
  #         source: timestamp
  #         format: RFC3339Nano
  #     - labels:
  #         stream:
  #     - output:
  #         source: output
