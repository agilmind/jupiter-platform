services:
  prometheus:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/services/prometheus/prometheus.yml
      - prometheus-data:prometheus
    command:
      - '--config.file=/etc/services/prometheus/prometheus.yml'
      - '--storage.tsdb.path=services//prometheus'
      - '--web.console.libraries=/etc/services/prometheus/console_libraries'
      - '--web.console.templates=/etc/services/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: always

  grafana:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=jupiter_admin
      - GF_SERVER_ROOT_URL=https://grafana.jupiter.ar  # Esto es correcto: refleja la URL pública
      - GF_SERVER_DOMAIN=grafana.jupiter.ar           # Dominio público
      - GF_SERVER_ENFORCE_DOMAIN=false                # No necesitas forzar el dominio internamente
      - GF_SERVER_PROTOCOL=http                       # Forzar HTTP internamente
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_USERS_ALLOW_SIGN_UP=false
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - app-network
    restart: always

  node-exporter:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - app-network
    restart: always

# PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - app-network
    restart: always

  # RabbitMQ Exporter
  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    container_name: rabbitmq_exporter
    environment:
      RABBIT_URL: "http://rabbitmq:15672"
      RABBIT_USER: "${RABBITMQ_USER:-guest}"
      RABBIT_PASSWORD: "${RABBITMQ_PASSWORD:-guest}"
    ports:
      - "9419:9419"
    networks:
      - app-network
    restart: always

  # Nginx Exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx_exporter
    command: -nginx.scrape-uri=http://nginx/stub_status
    ports:
      - "9113:9113"
    networks:
      - app-network
    restart: always

  # MySQL Exporter
  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql_exporter
    environment:
      DATA_SOURCE_NAME: "${WP_DB_USER}:${WP_DB_PASSWORD}@(mysql:3306)/"
    ports:
      - "9104:9104"
    networks:
      - app-network
    restart: always

  cadvisor:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    external: true
    name: jupiter-app_app-network

volumes:
  prometheus-data:
  grafana-data:
