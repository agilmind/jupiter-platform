# Base stage
FROM node:22-alpine AS base
WORKDIR /app
ENV NODE_ENV=production

# Dependencies stage
FROM base AS dependencies
COPY package.json package-lock.json ./
COPY apps/<%=projectName%>/<%=webAppName%>/package.json ./apps/<%=projectName%>/<%=webAppName%>/
COPY libs/<%=projectName%>/shared/package.json ./libs/<%=projectName%>/shared/
COPY libs/<%=projectName%>/api-interfaces/package.json ./libs/<%=projectName%>/api-interfaces/
RUN npm ci --production=false

# Build stage
FROM dependencies AS build
COPY . .
RUN npx nx build <%=webAppName%> --prod

# Runtime stage (using nginx)
FROM nginx:alpine AS runtime
COPY --from=build /app/dist/apps/<%=projectName%>/<%=webAppName%> /usr/share/nginx/html
COPY apps/<%=projectName%>/<%=webAppName%>/nginx.conf /etc/nginx/conf.d/default.conf

# Expose the web port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
