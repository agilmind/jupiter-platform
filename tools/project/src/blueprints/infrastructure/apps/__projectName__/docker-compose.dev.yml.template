services:
  # App Server
  <%=appServerName%>:
    build:
      context: ../../
      dockerfile: apps/<%=projectName%>/<%=appServerName%>/Dockerfile.dev
      args:
        NODE_ENV: development
    container_name: <%=projectName%>-<%=appServerName%>
    environment:
      - NODE_ENV=development
      - PORT=4000
      - HOST=0.0.0.0
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    ports:
      - "4000:4000"
      - "9229:9229"  # Puerto para debugging
    volumes:
      - ../../apps/<%=projectName%>/<%=appServerName%>:/app/apps/<%=projectName%>/<%=appServerName%>
      - ../../libs:/app/libs
      - ../../node_modules:/app/node_modules
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - app-network

  # Web App
  <%=webAppName%>:
    build:
      context: ../../
      dockerfile: apps/<%=projectName%>/<%=webAppName%>/Dockerfile.dev
    container_name: <%=projectName%>-<%=webAppName%>
    environment:
      - SERVER_PORT=4000
    ports:
      - "3000:80"
    depends_on:
      - <%=appServerName%>
    networks:
      - app-network

  # Worker Service
  <%=workerName%>:
    build:
      context: ../../
      dockerfile: apps/<%=projectName%>/<%=workerName%>/Dockerfile.dev
      args:
        NODE_ENV: development
    container_name: <%=projectName%>-<%=workerName%>
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - RABBITMQ_URL=${RABBITMQ_URL}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "9230:9230"  # Puerto para debugging del worker
    volumes:
      - ../../apps/<%=projectName%>/<%=workerName%>:/app/apps/<%=projectName%>/<%=workerName%>
      - ../../libs:/app/libs
      - ../../node_modules:/app/node_modules
    depends_on:
      - rabbitmq
      - <%=appServerName%>
    networks:
      - app-network

  # Database
  postgres:
    image: postgres:14
    container_name: <%=projectName%>-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 500M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: <%=projectName%>-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
