#!/bin/sh
# Script para esperar a que RabbitMQ esté disponible antes de iniciar la aplicación

echo "Esperando que RabbitMQ esté disponible..."
max_retries=${MAX_RETRIES:-30}
retries=0

until curl -s http://${RABBITMQ_HOST:-mi-proyecto-rabbitmq}:15672 > /dev/null 2>&1; do
  retries=$((retries+1))

  if [ $retries -ge $max_retries ]; then
    echo "Error: RabbitMQ no está disponible después de $max_retries intentos."
    exit 1
  fi

  echo "Intento $retries/$max_retries - RabbitMQ no está listo, esperando 5 segundos..."
  sleep 5
done

echo "RabbitMQ está listo. Iniciando aplicación..."

# Ahora buscamos main.js directamente, sin depender de scripts adicionales
if [ "$1" = "node" ] && [ "$2" = "main.js" ]; then
  # Buscar main.js en diferentes ubicaciones
  if [ -f "/app/main.js" ]; then
    echo "Ejecutando /app/main.js"
    exec node /app/main.js
  elif [ -f "/app/src/main.js" ]; then
    echo "Ejecutando /app/src/main.js"
    exec node /app/src/main.js
  else
    echo "ERROR: No se encontró main.js en las ubicaciones esperadas."
    echo "Contenido del directorio /app:"
    ls -la /app

    # Buscar cualquier main.js en el sistema
    echo "Buscando main.js en el sistema:"
    MAIN_FILES=$(find /app -name "main.js" 2>/dev/null || echo "")

    if [ -n "$MAIN_FILES" ]; then
      echo "Se encontraron posibles archivos main.js:"
      echo "$MAIN_FILES"
      FIRST_MAIN=$(echo "$MAIN_FILES" | head -n 1)
      echo "Intentando ejecutar: $FIRST_MAIN"
      exec node $FIRST_MAIN
    else
      echo "No se encontró ningún archivo main.js en el sistema."
      echo "Listando archivos JavaScript disponibles:"
      find /app -name "*.js" | sort
      exit 1
    fi
  fi
else
  # Si no estamos ejecutando node main.js, ejecutamos el comando original
  exec "$@"
fi
