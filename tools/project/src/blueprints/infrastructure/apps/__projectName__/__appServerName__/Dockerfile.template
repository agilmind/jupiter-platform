# Dockerfile.template (Depuración con tree y verificación de prisma)

# Etapa 1: Construcción
FROM node:<%= nodeVersion || '18' %> AS builder
WORKDIR /app

# Instalar tree para depuración
RUN apt-get update && apt-get install -y tree && rm -rf /var/lib/apt/lists/*

RUN npm install -g npm@latest

COPY package.json package-lock.json .npmrc nx.json tsconfig.base.json ./
COPY eslint.config.mjs ./

RUN npm ci

COPY apps ./apps
# Copiar libs si existe
COPY libs ./libs
COPY tsconfig.base.json ./ # Asegurar que se copia

# --- Verificar copia de Prisma ---
RUN echo ">>> Listing /app contents BEFORE copying prisma:" && ls -la /app
COPY <%= appSourcePath %>/prisma ./prisma
RUN echo ">>> Listing /app contents AFTER copying prisma:" && ls -la /app
RUN echo ">>> Listing /app/prisma contents:" && ls -la /app/prisma || echo "/app/prisma not found (after copy)"
# --- Fin verificación ---

# Ejecutar el build específico
RUN npx nx build <%= appServerProjectName || 'jupiter-app-server' %>

# --- PASOS DE DEPURACIÓN (con tree) ---
RUN echo ">>> Listing /app contents after build:" && ls -la /app
RUN echo ">>> Tree view of /app/dist:" && tree /app/dist || echo "/app/dist not found or tree command failed"
RUN echo ">>> Listing /app/prisma contents after build:" && ls -la /app/prisma || echo "/app/prisma not found (after build)"
# --- FIN PASOS DE DEPURACIÓN ---

# RUN npm prune --omit=dev

# Etapa 2: Producción
FROM node:<%= nodeVersion || '18' %>-alpine AS production
WORKDIR /app
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

COPY --from=builder --chown=appuser:appgroup /app/node_modules ./node_modules

# --- AJUSTAR ESTA RUTA BASADO EN LA SALIDA DE 'tree /app/dist' ---
COPY --from=builder --chown=appuser:appgroup /app/dist/apps/jupiter ./dist # Provisionalmente apuntando a 'jupiter'

COPY --chown=appuser:appgroup package.json .
# --- Usar la ruta que debería ser correcta (verificar con ls after copy) ---
COPY --from=builder --chown=appuser:appgroup /app/prisma ./prisma

USER appuser
EXPOSE <%= appServerPort || 3000 %>
CMD ["node", "dist/main.js"]
