# Dockerfile para app-server en producción
# Utiliza un enfoque multi-etapa con imagen base

# Etapa de construcción
FROM node-base:dev AS builder

WORKDIR /app

# Copiar package.json para modificarlo
COPY package.json ./

# Eliminar dependencias problemáticas
RUN node -e "const fs=require('fs'); \
    const pkg=JSON.parse(fs.readFileSync('./package.json')); \
    if(pkg.dependencies) { delete pkg.dependencies['haiku-generator']; } \
    if(pkg.devDependencies) { delete pkg.devDependencies['haiku-generator']; } \
    fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2));"

# Copiar archivos necesarios para la compilación
COPY package-lock.json ./
COPY tsconfig.base.json ./
COPY apps/<%=projectName%>/tsconfig.json ./apps/<%=projectName%>/
COPY apps/<%=projectName%>/<%=appServerName%>/ ./apps/<%=projectName%>/<%=appServerName%>/

# Instalar dependencias con reintentos
RUN for i in 1 2 3 4 5; do \
        echo "=== Intento $i de instalación de dependencias ==="; \
        npm install --no-package-lock --no-audit --no-fund --omit=optional --ignore-scripts && break || \
        echo "=== Intento $i falló, esperando antes de reintentar... ==="; \
        sleep 15; \
    done

# Compilar TypeScript
WORKDIR /app/apps/<%=projectName%>/<%=appServerName%>
RUN echo "Compilando TypeScript para <%=appServerName%>..."
RUN npx tsc -p tsconfig.json

# Etapa de producción
FROM node-base:prod

# Identificar el servicio
ENV SERVICE_TYPE="app-server"
ENV SERVICE_NAME="<%=appServerName%>"

# Copiar dependencias de producción
COPY --from=builder /app/node_modules ./node_modules

# Copiar archivos compilados
COPY --from=builder /app/dist/compiled/<%=appServerName%> ./server

# Configurar variables de entorno
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=4000
ENV RABBITMQ_HOST=<%=projectName%>-rabbitmq
ENV SERVER_JS_PATH=/app/server/apps/<%=projectName%>/<%=appServerName%>/src/main.js

# Exponer puerto
EXPOSE ${PORT}

# Configurar healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
  CMD curl -f http://localhost:4000/health || exit 1

# Comando de inicio
CMD ["/usr/local/bin/start-service.sh"]
