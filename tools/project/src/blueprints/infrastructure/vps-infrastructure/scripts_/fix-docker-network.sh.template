#!/bin/bash
# Script para solucionar problemas de red en Docker
# Ejecutar como sudo o usuario con permisos Docker

# Colores para consola
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

PROJECT_NAME="<%=projectName%>"

echo -e "${BLUE}===========================================================${NC}"
echo -e "${BLUE}Solucionando problemas de red en Docker para $PROJECT_NAME${NC}"
echo -e "${BLUE}===========================================================${NC}"

# Verificar permisos
if [ ! -w "/var/run/docker.sock" ]; then
    echo -e "${RED}Este script debe ejecutarse como usuario con permisos para Docker${NC}"
    echo -e "${YELLOW}Intenta con: sudo $0${NC}"
    exit 1
fi

# Detener los contenedores
echo -e "${YELLOW}Deteniendo todos los contenedores...${NC}"
docker compose down || true

# Eliminar redes no utilizadas
echo -e "${YELLOW}Eliminando redes no utilizadas...${NC}"
docker network prune -f

# Eliminar redes con conflictos específicos (si existen)
CONFLICT_NETWORKS=$(docker network ls --filter name=$PROJECT_NAME -q)
if [ ! -z "$CONFLICT_NETWORKS" ]; then
    echo -e "${YELLOW}Eliminando redes con posibles conflictos...${NC}"
    docker network rm $CONFLICT_NETWORKS || true
fi

# Reiniciar Docker
echo -e "${YELLOW}Reiniciando servicio Docker...${NC}"
if command -v systemctl &> /dev/null; then
    sudo systemctl restart docker
elif command -v service &> /dev/null; then
    sudo service docker restart
else
    echo -e "${RED}No se pudo detectar el sistema de inicio. Reinicia Docker manualmente.${NC}"
    exit 1
fi

# Esperar a que Docker se reinicie
echo -e "${YELLOW}Esperando a que Docker se reinicie...${NC}"
sleep 5
echo -e "${YELLOW}Verificando el estado de Docker...${NC}"
docker ps &> /dev/null
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker no está respondiendo. Espera unos segundos más...${NC}"
    sleep 10
    docker ps &> /dev/null
    if [ $? -ne 0 ]; then
        echo -e "${RED}No se pudo reiniciar Docker correctamente.${NC}"
        exit 1
    fi
fi

echo -e "${GREEN}Docker reiniciado correctamente${NC}"

# Crear red manualmente si es necesario
echo -e "${YELLOW}Creando red $PROJECT_NAME_network...${NC}"
docker network create $PROJECT_NAME"_network" || true

# Iniciar los contenedores nuevamente
echo -e "${YELLOW}Iniciando los contenedores nuevamente...${NC}"
docker compose up -d

echo -e "${GREEN}===========================================================${NC}"
echo -e "${GREEN}¡Proceso completado!${NC}"
echo -e "${GREEN}===========================================================${NC}"
