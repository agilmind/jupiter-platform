#!/bin/bash
# Script para resetear completamente el VPS - SOLO PARA PRUEBAS
# ¡ADVERTENCIA! Este script eliminará TODOS los datos y configuraciones
# Versión: 1.1

# Colores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Configuración
PROJECT_NAME="<%=projectName%>"
VPS_USER="deploy"  # Usuario dedicado para despliegues
VPS_HOST="$PROJECT_NAME.ar"  # O la IP/dominio de tu VPS
DEPLOY_PATH="/opt/$PROJECT_NAME"  # Ruta en el VPS donde está desplegado
BACKUP_PATH="/opt/$PROJECT_NAME-BACKUP-BEFORE-RESET-$(date +%Y%m%d%H%M%S)"

# Advertencias múltiples para evitar errores
echo -e "${RED}${BOLD}¡¡¡ ADVERTENCIA EXTREMA !!!${NC}"
echo
echo -e "${RED}===========================================================${NC}"
echo -e "${RED}               RESETEO COMPLETO DEL VPS                    ${NC}"
echo -e "${RED}===========================================================${NC}"
echo
echo -e "${RED}${BOLD}¡¡¡ ESTE SCRIPT ELIMINARÁ PERMANENTEMENTE !!!${NC}"
echo -e "${RED}${BOLD} * TODOS los contenedores Docker${NC}"
echo -e "${RED}${BOLD} * TODAS las imágenes Docker${NC}"
echo -e "${RED}${BOLD} * TODOS los volúmenes y datos${NC}"
echo -e "${RED}${BOLD} * TODA la configuración en $DEPLOY_PATH${NC}"
echo
echo -e "${YELLOW}Este script SOLO debe usarse en entornos de prueba o cuando${NC}"
echo -e "${YELLOW}se necesita comenzar desde cero. NO ES ADECUADO PARA PRODUCCIÓN.${NC}"
echo
echo -e "${YELLOW}Se realizará un backup automático en: $BACKUP_PATH${NC}"
echo -e "${YELLOW}pero NO hay garantía de que sea completo o restaurable.${NC}"
echo
echo -e "${RED}===========================================================${NC}"

# Primera confirmación
read -p "¿Estás ABSOLUTAMENTE SEGURO de que quieres continuar? (escriba 'yes' para confirmar): " CONFIRM1
if [[ "$CONFIRM1" != "yes" ]]; then
    echo -e "${GREEN}Operación cancelada. No se ha modificado nada.${NC}"
    exit 0
fi

# Segunda confirmación (escribir el nombre del proyecto)
read -p "Para confirmar, escriba el nombre del proyecto ($PROJECT_NAME): " CONFIRM2
if [[ "$CONFIRM2" != "$PROJECT_NAME" ]]; then
    echo -e "${GREEN}Operación cancelada. No se ha modificado nada.${NC}"
    exit 0
fi

# Verificar conexión al VPS
echo -e "${YELLOW}Verificando conexión con el VPS...${NC}"
if ! ssh -q "$VPS_USER@$VPS_HOST" exit; then
  echo -e "${RED}Error: No se puede conectar al VPS${NC}"
  exit 1
fi

# Verificar que existe la instalación
echo -e "${YELLOW}Verificando instalación existente...${NC}"
if ! ssh "$VPS_USER@$VPS_HOST" "[ -d $DEPLOY_PATH ]"; then
  echo -e "${YELLOW}Advertencia: No se encontró ninguna instalación en $DEPLOY_PATH${NC}"
  read -p "¿Continuar de todos modos? (y/n): " CONTINUE
  if [[ "$CONTINUE" != "y" ]]; then
      echo -e "${GREEN}Operación cancelada.${NC}"
      exit 0
  fi
fi

# Método interactivo - necesitamos conectarnos directamente al VPS y ejecutar comandos allí
echo -e "${YELLOW}===========================================================${NC}"
echo -e "${YELLOW}El reseteo requiere acceso de superusuario en el VPS.${NC}"
echo -e "${YELLOW}A continuación se abrirá una sesión SSH al VPS.${NC}"
echo -e "${YELLOW}Por favor, ejecute estos comandos manualmente:${NC}"
echo -e "${BLUE}"
echo "# 1. Crear directorio de backup"
echo "sudo mkdir -p $BACKUP_PATH"
echo ""
echo "# 2. Copiar instalación actual (si existe)"
echo "if [ -d $DEPLOY_PATH ]; then sudo cp -r $DEPLOY_PATH/* $BACKUP_PATH/ 2>/dev/null; fi"
echo ""
echo "# 3. Detener y eliminar todos los contenedores Docker"
echo "docker stop \$(docker ps -a -q) 2>/dev/null || true"
echo "docker rm \$(docker ps -a -q) 2>/dev/null || true"
echo ""
echo "# 4. Eliminar todas las imágenes Docker"
echo "docker rmi -f \$(docker images -a -q) 2>/dev/null || true"
echo ""
echo "# 5. Eliminar todos los volúmenes Docker"
echo "docker volume rm \$(docker volume ls -q) 2>/dev/null || true"
echo ""
echo "# 6. Eliminar redes Docker personalizadas"
echo "NETWORKS=\$(docker network ls | grep -v \"bridge\" | grep -v \"host\" | grep -v \"none\" | awk 'NR>1 {print \$1}')"
echo "if [ ! -z \"\$NETWORKS\" ]; then docker network rm \$NETWORKS; fi"
echo ""
echo "# 7. Limpiar sistema Docker"
echo "docker system prune -af --volumes"
echo ""
echo "# 8. Eliminar directorio de instalación"
echo "sudo rm -rf $DEPLOY_PATH"
echo ""
echo "# 9. Eliminar configuraciones de Nginx"
echo "sudo rm -f /etc/nginx/conf.d/${PROJECT_NAME}.conf"
echo "sudo rm -f /etc/nginx/conf.d/grafana.vps.${PROJECT_NAME}.ar.conf"
echo "sudo rm -f /etc/nginx/conf.d/prometheus.vps.${PROJECT_NAME}.ar.conf"
echo "sudo rm -f /etc/nginx/conf.d/alertmanager.vps.${PROJECT_NAME}.ar.conf"
echo ""
echo "# 10. Recargar Nginx"
echo "sudo nginx -t && sudo systemctl reload nginx"
echo ""
echo "# 11. Salir cuando haya terminado"
echo "exit"
echo -e "${NC}"
echo -e "${YELLOW}===========================================================${NC}"
echo -e "${YELLOW}Presione Enter para conectarse al VPS y ejecutar estos comandos.${NC}"
echo -e "${YELLOW}===========================================================${NC}"
read

# Conectar al VPS
ssh "$VPS_USER@$VPS_HOST"

echo -e "${GREEN}===========================================================${NC}"
echo -e "${GREEN}Si ejecutaste todos los comandos correctamente, el VPS ahora está limpio.${NC}"
echo -e "${GREEN}===========================================================${NC}"
echo
echo -e "${YELLOW}Se ha realizado un backup de emergencia en:${NC}"
echo -e "${BLUE}$BACKUP_PATH${NC}"
echo
echo -e "${YELLOW}El VPS ahora está en estado limpio, listo para una nueva instalación.${NC}"
echo -e "${YELLOW}Puedes instalar ahora usando:${NC}"
echo -e "${BLUE}bash ./apps/$PROJECT_NAME/vps-infrastructure/deployment/scripts/minimal/deploy-minimal.sh${NC}"
echo -e "${BLUE}bash ./apps/$PROJECT_NAME/vps-infrastructure/deployment/scripts/hybrid/deploy-hybrid.sh${NC}"
