# Configuration for VPS: <%= vpsName %>

This directory contains the generated configuration files intended for the Virtual Private Server instance related to **<%= vpsName %>**.

Files managed by the `@mi-org/vps` Nx generator (scope: `<%= scope %>`).

**Current Stage:** Phase 2 - Basic Docker Compose/Nginx Deployment.

---

## Deployment Prerequisites & Instructions

Before the automated CD workflow can deploy this configuration, ensure the target server and GitHub repository are correctly set up.

**1. Server Initialization:**
   * The target VPS must be initialized using the two setup scripts located in the `tools/vps/scripts/` directory of this repository:
     * `debian-harden.sh` (Run **first** on a fresh server as root)
     * `vps-initial-setup.sh` (Run **second** using sudo)
   * These scripts install necessary software (Docker, Certbot), create the `deploy` user (in `docker` group), configure directories, and harden SSH.
   * **Refer to `tools/vps/README.md` for detailed execution instructions.**

**2. GitHub Actions Secrets:**
   * The CD workflow (`.github/workflows/cd-deploy.yml`) requires the following secrets for **this deployment (`<%= vpsName %>`)** configured in GitHub (`Settings` > `Secrets and variables` > `Actions` > `Repository secrets`):
     * **`VPS_<%= vpsName.toUpperCase().replace(/-/g, '_') %>_HOST`**: IP Address or FQDN of the target server.
     * **`VPS_<%= vpsName.toUpperCase().replace(/-/g, '_') %>_USER`**: SSH username for deployment (usually `deploy`).
     * **`VPS_<%= vpsName.toUpperCase().replace(/-/g, '_') %>_KEY`**: The **PRIVATE** SSH key.
       * **Generación:** Crea un par de claves (pública/privada) **específico** para despliegues (ej: `ssh-keygen -t ed25519 -f ~/.ssh/github_actions_deploy_key`). ¡NO USES tu clave personal!
       * **Uso:** La clave **pública** (`.pub`) se añade al `/home/deploy/.ssh/authorized_keys` del servidor (el script `vps-initial-setup.sh` te ayuda). La clave **privada** completa (incluyendo `-----BEGIN...` y `-----END...`) se pega como valor de este secret en GitHub.

**3. Deployment Process:**
   * Committing and pushing changes within this directory (`apps/<%= vpsName %>/`) to the `main` branch will trigger the GitHub Actions workflow.
   * The workflow will:
     * Determine if this project (`<%= vpsName %>`) was affected.
     * Connect to the server using the configured secrets.
     * Copy the files from this directory (`docker-compose.vps.yml`, `html/`, `nginx-conf/`, `deploy.sh`) to `/home/deploy/apps/<%= vpsName %>/` on the server.
     * Execute `./deploy.sh` within that directory on the server as the `deploy` user (which uses `docker compose` to start Nginx).

**Refer to `tools/vps/README.md` for the full project strategy and advanced configuration details.**
